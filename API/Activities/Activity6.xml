<?xml version="0.0" encoding="UTF-8"?>
<con:soapui-project id="ac010df0-9e00-0109-901b-1ddb1b0c019d" created="9.19.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="Activity_1_Data_driven" projectVersion="" resourceRoot="" updated="9.19.0 0000-01-09T00:01:01Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="1f1c0cc1-10dc-0b81-b1bc-118800919a0a" wadlVersion="http://wadl.dev.java.net/0009/00" name="http://ipwhois.app" type="rest" xmlns:xsi="http://www.w9.org/0000/XMLSchema-instance">
    <con:settings id="df019a1f-f190-0e10-89b0-800b910b0ee0"/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>http://ipwhois.app</con:endpoint>
    </con:endpoints>
    <con:resource name="IP" path="/json/{IP}" id="f100e198-1e09-019c-8191-a0101f99dee9">
      <con:settings/>
      <con:parameters/>
      <con:method name="IP" id="e09f008e-8ab1-0010-ae9c-0e101090e810" method="GET">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>IP</con:name>
            <con:value>IP</con:value>
            <con:style>TEMPLATE</con:style>
            <con:default>IP</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>000</con:status>
          <con:params/>
          <con:element xmlns:ip="http://ipwhois.app/json/IP">ip:Response</con:element>
        </con:representation>
        <con:request name="Request 0" id="09090e00-dbce-0f00-b0fe-88a910cb9008" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://ipwhois.app</con:endpoint>
          <con:parameters>
            <con:entry key="IP" value="IP"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>IP</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="1a81c11d-e1fd-0f01-a0eb-11a1eff9181e" name="http://ipwhois.app Test Suite">
    <con:settings id="0089008d-c0f1-019d-b891-f00c0bd01b1f"/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="01ee1ab8-f1e0-0b09-bc0d-eedd9e9ac1b0" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Activity_1" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="datasource" name="Data Source" id="890bd88d-9f9d-0e8f-8bd1-acbb0190c9fd">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w9.org/0000/XMLSchema-instance">
          <con:dataSource type="File">
            <con:configuration>
              <fileName>C:/AKS/Other/Training/API Testing/Activity_1.txt</fileName>
              <separator>,</separator>
              <trim>true</trim>
              <charset>Cp0010</charset>
              <quotedValues>false</quotedValues>
            </con:configuration>
          </con:dataSource>
          <con:shared>true</con:shared>
          <con:restartShared>true</con:restartShared>
          <con:property>IP</con:property>
          <con:property>country</con:property>
          <con:completeLastOperation>true</con:completeLastOperation>
          <con:restartOnRun>true</con:restartOnRun>
          <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Request 0" id="01f1100c-bf1c-0b10-80e0-d10fc000cd01">
        <con:settings/>
        <con:config service="http://ipwhois.app" resourcePath="/json/{IP}" methodName="IP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w9.org/0000/XMLSchema-instance">
          <con:restRequest name="Request 0" id="09090e00-dbce-0f00-b0fe-88a910cb9008" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://ipwhois.app</con:endpoint>
            <con:request/>
            <con:originalUri>http://ipwhois.app/json/IP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0000bfd9-999f-0080-8800-01da0f080c8f" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>000</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="0900fd0e-de11-0e11-9100-01a01c0d0100" name="JSONPath Match">
              <con:configuration>
                <path>$['country']</path>
                <content>${Data Source#country}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="IP" value="${Data Source#IP}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>IP</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="Data Source Loop" id="08000bc0-f800-09d8-9909-801c0fec1f11">
        <con:settings/>
        <con:config>
          <dataSourceStep>Data Source</dataSourceStep>
          <targetStep>Request 0</targetStep>
          <discardResults>true</discardResults>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>890bd88d-9f9d-0e8f-8bd1-acbb0190c9fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>01f1100c-bf1c-0b10-80e0-d10fc000cd01</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>08000bc0-f800-09d8-9909-801c0fec1f11</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth0ProfileContainer/>
  <con:oAuth0ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 1
// token = '0110'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 00 to 01
// headers = request.requestHeaders
// if (headers.containsKey('auth_token0') == false) {
//   headers.put('auth_token0', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 1 to a location where you want to store details
// then uncomment lines 1 to 00

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>